{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-interceptor.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/signUp/signUp.component.ts","webpack:///src/app/auth/signUp/signUp.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/error-interceptor.ts","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","providers","AppComponent","authService","autoAuthUser","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","name","declarations","bootstrap","entryComponents","AuthInterceptor","next","authToken","getToken","authRequest","clone","headers","set","handle","AuthGuard","router","route","state","isAuth","getIsAuth","navigate","AuthService","http","isAuthenticated","authStatusListener","token","userId","asObservable","email","password","authData","post","subscribe","response","console","log","err","expiresInDuration","expiresIn","setAuthTimer","saveAuthData","Date","getTime","error","authInfo","getAuthData","now","expirationDate","clearTimeout","tokenTimer","clearAuthData","duration","setTimeout","logout","localStorage","setItem","toISOString","removeItem","getItem","providedIn","LoginComponent","isLoading","authStatusSub","getAuthStatusListener","authStatus","form","value","invalid","login","unsubscribe","SignUpComponent","createUser","DashboardComponent","cityData","cityData2","cityData3","city","get","res","city1","city2","getData","searchInput","getComparisionData","searchInput2","searchInput3","onSearch","onCompareSearch","ErrorInterceptor","dialog","pipe","errorMessage","message","open","data","ErrorComponent","HeaderComponent","userIsAuthenticated","authListenerSubs","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\"\r\nimport { LoginComponent } from \"./auth/login/login.component\"\r\nimport { SignUpComponent } from './auth/signUp/signUp.component';\r\nimport { AuthGuard } from './auth/auth.guard'\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: LoginComponent },\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'signup', component: SignUpComponent},\r\n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\r\n  // {path: 'create', component: comp1, canActivate: [AuthGuard]},\r\n  // {path: 'edit/:comp', component: comp2, canActivate: [AuthGuard]}\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService) {}\r\n  ngOnInit() {\r\n    this.authService.autoAuthUser();\r\n  }\r\n}\r\n","<nb-layout>\r\n\r\n<!-- <nb-layout-header subheader>\r\n    Cost Search\r\n    <span class=\"header-spacer\"></span>\r\n    <nb-actions>\r\n      <nb-action > Logout </nb-action>\r\n    </nb-actions>\r\n  </nb-layout-header> -->\r\n\r\n  <nb-layout-column>\r\n    <app-header></app-header>\r\n\r\n    <main>\r\n      <router-outlet></router-outlet>\r\n    \r\n    </main>\r\n    \r\n  </nb-layout-column>\r\n\r\n  <nb-layout-footer fixed>\r\n  <!-- Insert footer here -->\r\n  </nb-layout-footer>\r\n\r\n</nb-layout>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule  } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { SignUpComponent } from './auth/signUp/signUp.component';\r\nimport { AuthInterceptor } from './auth/auth-interceptor'\r\nimport { ErrorInterceptor } from './error-interceptor';\r\nimport { NbCardModule, NbTabsetModule, NbThemeModule, NbLayoutModule, NbActionsModule, NbInputModule, NbFormFieldModule, NbIconModule, NbButtonModule } from '@nebular/theme';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    SignUpComponent,\r\n    ErrorComponent,\r\n    DashboardComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatProgressSpinnerModule,\r\n    MatExpansionModule,\r\n    HttpClientModule,\r\n    MatDialogModule,\r\n    NbTabsetModule,\r\n    NbCardModule,\r\n    NbEvaIconsModule,\r\n    NbActionsModule,\r\n    NbInputModule,\r\n    NbFormFieldModule,\r\n    NbIconModule,\r\n    NbButtonModule,\r\n    MatProgressBarModule,\r\n    NbThemeModule.forRoot(),\r\n    NbThemeModule.forRoot({ name: 'default' }),\r\n    NbLayoutModule\r\n  ],\r\n  providers: [{provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}, {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ErrorComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set(\"Authorization\", \"Bearer \" + authToken)\r\n    })\r\n    return next.handle(authRequest);\r\n  }\r\n\r\n}\r\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n  canActivate(route: import(\"@angular/router\").ActivatedRouteSnapshot, state: import(\"@angular/router\").RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | import(\"rxjs\").Observable<boolean | import(\"@angular/router\").UrlTree> | Promise<boolean | import(\"@angular/router\").UrlTree> {\r\n    const isAuth = this.authService.getIsAuth();\r\n    if(!isAuth) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    return isAuth;\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\"\r\nimport { HttpClient } from '@angular/common/http'\r\n\r\nimport { AuthData } from './auth-data.model'\r\nimport { response } from \"express/lib/express\"\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n\r\n  private token: string;\r\n  private userId: string;\r\n  private isAuthenticated = false;\r\n  private tokenTimer: any;\r\n  private authStatusListener = new Subject<boolean>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n\r\n  getIsAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  getUserId() {\r\n    return this.userId;\r\n  }\r\n\r\n  getAuthStatusListener() {\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n\r\n  createUser(email: string, password: string) {\r\n    const authData: AuthData = {\r\n      email: email,\r\n      password: password\r\n    }\r\n    this.http.post(\"http://52.66.255.245:3000/api/user/signup\", authData)\r\n      .subscribe(response => {\r\n        console.log(response);\r\n        this.router.navigate(['/']);\r\n      }, err =>{\r\n        console.log(err);\r\n        this.authStatusListener.next(false);\r\n      })\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    const authData: AuthData = {\r\n      email: email,\r\n      password: password\r\n    }\r\n    this.http.post<{ token: string, message: string, expiresIn: number , userId: string}>(\"http://52.66.255.245:3000/api/user/login\", authData)\r\n      .subscribe(response => {\r\n        console.log(response);\r\n        this.token = response.token;\r\n        if (response.token) {\r\n\r\n          const expiresInDuration = response.expiresIn;\r\n          this.setAuthTimer(expiresInDuration);\r\n          this.isAuthenticated = true;\r\n          this.userId = response.userId;\r\n          this.authStatusListener.next(true);\r\n          this.saveAuthData(response.token, new Date((new Date()).getTime() + (expiresInDuration * 1000)), this.userId)\r\n          this.router.navigate(['dashboard']);\r\n        }\r\n      }, error => {\r\n        this.authStatusListener.next(false);\r\n      })\r\n  }\r\n\r\n  autoAuthUser() {\r\n    const authInfo = this.getAuthData();\r\n\r\n    if(!authInfo)\r\n      return;\r\n\r\n    const now = new Date();\r\n\r\n    const expiresIn = authInfo.expirationDate.getTime() - now.getTime();\r\n\r\n    if(expiresIn > 0) {\r\n      this.token = authInfo.token;\r\n      this.isAuthenticated = true;\r\n      this.userId = authInfo.userId;\r\n      this.setAuthTimer(expiresIn / 1000);\r\n      this.authStatusListener.next(true);\r\n    }\r\n\r\n  }\r\n\r\n  logout() {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    clearTimeout(this.tokenTimer);\r\n    this.clearAuthData();\r\n    this.userId = null;\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  private setAuthTimer(duration: number) {\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, duration * 1000);\r\n\r\n  }\r\n\r\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\r\n\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expiration\", expirationDate.toISOString());\r\n    localStorage.setItem(\"userId\", userId);\r\n\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expiration\");\r\n    localStorage.removeItem(\"userId\");\r\n  }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const expirationDate = localStorage.getItem(\"expiration\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    if(!token || ! expirationDate)\r\n      return;\r\n\r\n    return {\r\n      token : token,\r\n      expirationDate: new Date(expirationDate),\r\n      userId: userId\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, OnDestroy} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  isLoading = false;\r\n  private authStatusSub: Subscription;\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\r\n      authStatus => {\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  onLogin(form: NgForm) {\r\n    console.log(form.value);\r\n    if(form.invalid) return;\r\n    this.isLoading = true;\r\n    this.authService.login(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n}\r\n","<h1 id=\"title\" class=\"title\" style=\"text-align: center;\">Sign In</h1>\r\n\r\n<mat-card style=\"max-width: 480px; margin: 0 auto;\">\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n  <form *ngIf='!isLoading' (submit)='onLogin(loginForm)' #loginForm=\"ngForm\">\r\n    <mat-form-field  appearance=\"fill\">\r\n      <mat-label>e-mail</mat-label>\r\n      <input matInput type=\"email\" name=\"email\" ngModel required email placeholder=\"e-mail\" #emailInput=\"ngModel\">\r\n      <mat-error *ngIf=\"emailInput.invalid\">\"please enter valid email\"</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>password</mat-label>\r\n      <input type=\"password\" name=\"password\" ngModel matInput placeholder=\"password\" #passwordInput=\"ngModel\" required>\r\n      <mat-error *ngIf=\"passwordInput.invalid\">\"please enter valid password\"</mat-error>\r\n    </mat-form-field>\r\n    <button mat-raised-button color=\"accent\" type=\"submit\" *ngIf=\"!isLoading\" style=\"margin: 0 auto;display: block;\">Login</button>\r\n  </form>\r\n</mat-card>\r\n\r\n<section class=\"another-action\" aria-label=\"Register\" style=\"text-align: center; margin-top: 8px;\">\r\n  Don't have an account? <a class=\"text-link\" routerLink=\"/signup\">Sign Up</a>\r\n</section>\r\n","import {Component, OnInit, OnDestroy} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service'\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  templateUrl: './signUp.component.html',\r\n  styleUrls: ['./signUp.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit, OnDestroy {\r\n  isLoading = false;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\r\n      authStatus => {\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  onSignUp(form: NgForm) {\r\n    console.log(form.value);\r\n\r\n    if (form.invalid) return;\r\n    this.isLoading = true;\r\n    this.authService.createUser(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n}\r\n","<mat-card style=\"max-width: 480px; margin: 0 auto;\">\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n  <form *ngIf='!isLoading' (submit)='onSignUp(signUpForm)' #signUpForm=\"ngForm\">\r\n    <mat-form-field>\r\n      <input matInput type=\"email\" name=\"email\" ngModel required email placeholder=\"e-mail\" #emailInput=\"ngModel\">\r\n      <mat-error *ngIf=\"emailInput.invalid\">\"please enter valid email\"</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input type=\"password\" name=\"password\" ngModel matInput placeholder=\"password\" #passwordInput=\"ngModel\" required>\r\n      <mat-error *ngIf=\"passwordInput.invalid\">\"please enter valid password\"</mat-error>\r\n    </mat-form-field>\r\n    <button mat-raised-button color=\"accent\" type=\"submit\"  style=\"margin: 0 auto;display: block;\">Sign UP</button>\r\n  </form>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Injectable } from \"@angular/core\"\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { response } from \"express/lib/express\"\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  cityData = {}\r\n  cityData2 = {}\r\n  cityData3 = {}\r\n\r\n  isLoading = false\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  getData(city) {\r\n    this.isLoading = true\r\n    this.http.get('http://52.66.255.245:3000/api/place/cityPrices?city='+city)\r\n      .subscribe(res => {\r\n        this.isLoading = false\r\n        console.log(res)\r\n        this.cityData = res['data']\r\n      }, err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  getComparisionData(city1, city2) {\r\n    this.isLoading = true\r\n    this.http.get(`http://52.66.255.245:3000/api/place/compare/cityPrices?city1=${city1}&city2=${city2}`)\r\n      .subscribe(res => {\r\n        this.isLoading = false\r\n        console.log(res)\r\n        // this.cityData = res['data']\r\n        this.cityData2 = res['city1']\r\n        this.cityData3 = res['city2']\r\n      }, err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  onSearch(form: NgForm) {\r\n    this.cityData = {}\r\n    if (form.invalid) return\r\n    console.log(form.value)\r\n    this.getData(form.value.searchInput)\r\n  }\r\n\r\n  onCompareSearch(form: NgForm) {\r\n    this.cityData2 = {}\r\n    this.cityData3 = {}\r\n    if (form.invalid) return\r\n    console.log(form.value)\r\n    this.getComparisionData(form.value.searchInput2, form.value.searchInput3)\r\n  }\r\n\r\n}\r\n","<nb-card>\r\n  <nb-card-body>\r\n\r\n    <nb-tabset>\r\n\r\n      <nb-tab tabTitle=\"Find Cost of Living\" tabIcon=\"search-outline\" responsive>\r\n        <p><strong>Cost of Living</strong>.</p>\r\n        <form (submit)=\"onSearch(searchForm)\" #searchForm=\"ngForm\">\r\n          <input style=\"margin: 8px;\" type=\"text\" name=\"searchInput\" nbInput placeholder=\"Type and Search City\" ngModel\r\n            #searchInput=\"ngModel\" required>\r\n          <button style=\"margin: 8px;\" nbButton status=\"primary\" type=\"submit\">Search<nb-icon icon=\"search\"></nb-icon>\r\n          </button>\r\n        </form>\r\n        <mat-progress-bar mode=\"indeterminate\" *ngIf=\"isLoading\"></mat-progress-bar>\r\n\r\n        <div *ngIf=\"cityData\">\r\n          <p>\r\n            <strong>\r\n              {{cityData['name']}}\r\n              {{cityData['currency']}}\r\n            </strong>\r\n          </p>\r\n\r\n          <nb-card *ngFor=\"let item of cityData['itemsFiltered'] | keyvalue\">\r\n            <nb-card-body>\r\n              <p><strong>{{item.key}}</strong></p>\r\n              <p *ngFor=\"let info of item.value\">\r\n                {{info.item_name}} - \r\n                <strong>{{cityData['currency']}} {{info.average_price | number: '1.0-0'}}</strong>\r\n              </p>\r\n            </nb-card-body>\r\n          </nb-card>\r\n        </div>\r\n\r\n      </nb-tab>\r\n      <nb-tab tabTitle=\"Compare Cities\" tabIcon=\"swap-outline\" responsive>\r\n        <p><strong>Compare Cost of Living.</strong>.</p>\r\n        <form (submit)=\"onCompareSearch(searchCompareForm)\" #searchCompareForm=\"ngForm\">\r\n          <input style=\"margin: 8px;\" type=\"text\" name=\"searchInput2\" nbInput placeholder=\"Type City1\" ngModel\r\n            #searchInput2=\"ngModel\" required>\r\n          <input style=\"margin: 8px;\" type=\"text\" name=\"searchInput3\" nbInput placeholder=\"Type City2\" ngModel\r\n            #searchInput3=\"ngModel\" required>\r\n          <button style=\"margin: 8px;\" nbButton status=\"primary\" type=\"submit\">Compare<nb-icon icon=\"swap-outline\">\r\n            </nb-icon></button>\r\n        </form>\r\n        <mat-progress-bar mode=\"indeterminate\" *ngIf=\"isLoading\"></mat-progress-bar>\r\n        <div *ngIf=\"cityData2['name'] && cityData3['name']\">\r\n          <p>\r\n            <strong>\r\n              {{cityData2['name']}} {{cityData2['currency']}} -VS- {{cityData3['name']}} {{cityData3['currency']}}\r\n            </strong>\r\n          </p>\r\n\r\n          <nb-card *ngFor=\"let item of cityData2['itemsFiltered'] | keyvalue\">\r\n            <nb-card-body>\r\n              <p><strong>{{item.key}}</strong></p>\r\n              <p *ngFor=\"let info of item.value; index as i\">\r\n                {{info.item_name}} - <strong>{{cityData2['currency']}} {{info.average_price | number: '1.0-0'}}</strong>\r\n                -VS-\r\n                <strong>{{cityData3['currency']}} {{cityData3['itemsFiltered'][item.key][i].average_price | number:\r\n                  '1.0-0'}}</strong>\r\n              </p>\r\n            </nb-card-body>\r\n          </nb-card>\r\n          <!-- <nb-card *ngFor=\"let item of cityData3['itemsFiltered'] | keyvalue\">\r\n                <nb-card-body>\r\n                  <p><strong>{{item.key}}</strong></p>\r\n                  <p *ngFor=\"let info of item.value\">\r\n                    {{info.item_name}} - {{cityData3['currency']}} {{info.average_price | number: '1.0-0'}}\r\n                  </p>\r\n                </nb-card-body>\r\n              </nb-card> -->\r\n        </div>\r\n      </nb-tab>\r\n\r\n    </nb-tabset>\r\n\r\n  </nb-card-body>\r\n</nb-card>","import { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http'\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private dialog: MatDialog){}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse)=>{\r\n        console.log(error)\r\n        let errorMessage = \"An unknown error occured\";\r\n        if(error.error.message)\r\n          errorMessage = error.error.message\r\n        this.dialog.open(ErrorComponent, {data: {message: errorMessage}});\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  templateUrl: './error.component.html'\r\n})\r\nexport class ErrorComponent {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message:string}){};\r\n  message = 'An unknown error occured';\r\n}\r\n","<h1 mat-dialog-title>An error occured!</h1>\r\n<div mat-dialog-content>\r\n  <p class=\"mat-body-1\">{{ data.message }}</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close>ok</button>\r\n</div>\r\n","\r\nimport { Subscription } from \"rxjs\"\r\nimport { Component, OnInit, OnDestroy } from \"@angular/core\"\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\n\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  userIsAuthenticated = false;\r\n  private authListenerSubs: Subscription;\r\n\r\n  constructor(private authService: AuthService) {\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authListenerSubs = this.authService.getAuthStatusListener().subscribe(isAuthenticated=>{\r\n      this.userIsAuthenticated = isAuthenticated;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authListenerSubs.unsubscribe();\r\n  }\r\n\r\n}\r\n","<!-- <mat-toolbar color=\"primary\">\r\n  <span> <a routerLink=\"/\">Cost Search</a></span>\r\n  <span class=\"spacer\"></span>\r\n\r\n  <ul>\r\n    <li *ngIf=\"!userIsAuthenticated\"><a mat-button routerLink=\"/login\" routerLinkActive=\"mat-accent\">Login</a></li>\r\n    <li *ngIf=\"!userIsAuthenticated\"><a mat-button routerLink=\"/signup\" routerLinkActive=\"mat-accent\">Signup</a></li>\r\n    <li *ngIf=\"userIsAuthenticated\" (click)=\"onLogout()\"><button mat-button>Logout</button></li>\r\n  </ul>\r\n</mat-toolbar> -->\r\n\r\n\r\n<nb-layout-header subheader>\r\n  \r\n  <h4>Cost Search</h4>\r\n  <span class=\"spacer\"></span>\r\n  <nb-actions>\r\n    <nb-action  *ngIf=\"!userIsAuthenticated\"> <a mat-button routerLink=\"/login\" routerLinkActive=\"mat-accent\">Login</a> </nb-action>\r\n    <nb-action  *ngIf=\"!userIsAuthenticated\"> <a mat-button routerLink=\"/signup\" routerLinkActive=\"mat-accent\">Signup</a> </nb-action>\r\n    <nb-action  *ngIf=\"userIsAuthenticated\" (click)=\"onLogout()\"> <button mat-button>Logout</button> </nb-action>\r\n  </nb-actions>\r\n</nb-layout-header>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}